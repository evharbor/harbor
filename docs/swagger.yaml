basePath: /
definitions:
  controllers.BaseJSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
    type: object
  controllers.BucketListJSON:
    properties:
      buckets:
        items:
          $ref: '#/definitions/models.Bucket'
        type: array
      code:
        type: integer
      code_text:
        type: string
      count:
        type: integer
      next:
        type: string
      page:
        $ref: '#/definitions/controllers.PageNumberInfo'
        type: object
      previous:
        type: string
    type: object
  controllers.BucketPostForm:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.DirCreate400JSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
      existing:
        type: boolean
    type: object
  controllers.DirCreateJSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
      dir:
        $ref: '#/definitions/models.HarborObject'
        type: object
    type: object
  controllers.DirListJSON:
    properties:
      bucket_name:
        type: string
      code:
        type: integer
      code_text:
        type: string
      count:
        type: integer
      dir_path:
        type: string
      files:
        items:
          $ref: '#/definitions/models.HarborObject'
        type: array
      next:
        type: string
      page:
        $ref: '#/definitions/controllers.PageNumberInfo'
        type: object
      previous:
        type: string
    type: object
  controllers.PageNumberInfo:
    properties:
      current:
        type: integer
      final:
        type: integer
    type: object
  controllers.UserDetailJSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
      user:
        $ref: '#/definitions/models.UserProfile'
        type: object
    type: object
  controllers.UserListJSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
      count:
        type: integer
      next:
        type: string
      privous:
        type: string
      results:
        items:
          $ref: '#/definitions/models.UserProfile'
        type: array
    type: object
  controllers.UserPatchForm:
    properties:
      company:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      telephone:
        type: string
    type: object
  controllers.UserPostForm:
    properties:
      company:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      telephone:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  controllers.bucketDetailForm:
    properties:
      ids:
        items:
          type: string
        type: array
    type: object
  controllers.bucketDetailJSON:
    properties:
      bucket:
        $ref: '#/definitions/models.Bucket'
        type: object
      code:
        type: integer
      code_text:
        type: string
    type: object
  controllers.bucketPatchJSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
      public:
        type: boolean
      rename:
        type: string
    type: object
  controllers.bucketPost400JSON:
    properties:
      code:
        type: integer
      code_text:
        type: string
      data:
        $ref: '#/definitions/controllers.BucketPostForm'
        type: object
      existing:
        type: boolean
    type: object
  controllers.bucketPostJSON:
    properties:
      bucket:
        $ref: '#/definitions/models.Bucket'
        type: object
      code:
        type: integer
      code_text:
        type: string
      data:
        $ref: '#/definitions/controllers.BucketPostForm'
        type: object
    type: object
  middlewares.JWTLoginForm:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  middlewares.JWTRefreshForm:
    properties:
      token:
        type: string
    type: object
  models.Bucket:
    properties:
      access_permission:
        description: 访问权限
        type: integer
      created_time:
        $ref: '#/definitions/models.TypeJSONTime'
        type: object
      id:
        type: integer
      name:
        type: string
      user_id:
        description: 所属用户id
        type: integer
    type: object
  models.HarborObject:
    properties:
      dlc:
        description: 该文件的下载次数，目录时dlc为0
        type: integer
      fod:
        description: True==文件，False==目录
        type: boolean
      id:
        type: integer
      na:
        description: 全路径文件名或目录名
        type: string
      name:
        description: 文件名或目录名
        type: string
      sh:
        description: 为True，则文件可共享，为False，则文件不能共享
        type: boolean
      si:
        description: 文件大小, 字节数
        type: integer
      ult:
        description: 文件的上传时间，或目录的创建时间
        type: string
      upt:
        description: 修改时间
        type: string
    type: object
  models.TypeJSONTime:
    type: object
  models.UserProfile:
    properties:
      company:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      telephone:
        type: string
      username:
        type: string
    type: object
host: 127.0.0.1:9000
info:
  contact:
    email: helpdesk@cnic.cn
    name: API Support
    url: http://obs.casearth.cn/
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://obs.casearth.cn/
  title: EVHarbor API
  version: "1.0"
paths:
  /api/v1/buckets/:
    get:
      consumes:
      - application/json
      description: 通过query参数“offset”和“limit”自定义获取存储桶列表
      parameters:
      - description: The initial index from which to return the results
        in: query
        name: offset
        required: true
        type: integer
      - description: Number of results to return per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BucketListJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 获取存储桶列表
      tags:
      - Bucket 存储桶
    post:
      consumes:
      - application/json
      description: 存储桶名称只能由字母、数字和“-”组成，且不能以“-”开头和结尾，长度3-64字符，符合DNS标准。
      parameters:
      - description: bucket name
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.BucketPostForm'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.bucketPostJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.bucketPost400JSON'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 创建存储桶
      tags:
      - Bucket 存储桶
  /api/v1/buckets/{id}:
    patch:
      consumes:
      - application/json
      description: |-
        #设置存储桶访问权限，提交query参数“public”, true(公有)，false(私有);
        #重命名存储桶，提交query参数“rename”,其值为新名称;
        #可以一次设置多个存储桶访问权限，其余存储桶id通过form ids传递, 重命名时ids无效。
        #同时提交“public”和“rename”参数,忽略“rename”参数
      parameters:
      - description: bucket id
        in: path
        name: id
        required: true
        type: integer
      - description: 设置对象公有或私有, true(公有)，false(私有)
        in: query
        name: public
        type: boolean
      - description: 重命名桶,值为存储桶新名称
        in: query
        name: rename
        type: string
      - description: bucket id list,一次设置多个桶的权限时使用，命重名桶时无效
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.bucketDetailForm'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.bucketPatchJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 设置存储桶访问权限或重命名存储桶
      tags:
      - Bucket 存储桶
  /api/v1/buckets/{id}/:
    delete:
      consumes:
      - application/json
      description: '#可以一次删除多个存储桶，其余存储桶id通过form ids传递。'
      parameters:
      - description: bucket id
        in: path
        name: id
        required: true
        type: integer
      - description: bucket id list
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.bucketDetailForm'
          type: object
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 删除存储桶
      tags:
      - Bucket 存储桶
    get:
      consumes:
      - application/json
      description: 获取存储桶详细信息
      parameters:
      - description: bucket id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.bucketDetailJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 获取存储桶详细信息
      tags:
      - Bucket 存储桶
  /api/v1/dir/{bucketname}/{dirpath}:
    get:
      consumes:
      - application/json
      description: 获取目录下目录和对象列表
      parameters:
      - description: bucketname
        in: path
        name: bucketname
        required: true
        type: string
      - description: dirpath
        in: path
        name: dirpath
        type: string
      - description: The initial index from which to return the results
        in: query
        name: offset
        required: true
        type: integer
      - description: Number of results to return per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.DirListJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      tags:
      - Dir 目录
    post:
      consumes:
      - application/json
      description: 创建目录
      parameters:
      - description: bucketname
        in: path
        name: bucketname
        required: true
        type: string
      - description: dirpath
        in: path
        name: dirpath
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.DirCreateJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.DirCreate400JSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      tags:
      - Dir 目录
  /api/v1/jwt-token-refresh/:
    post:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      description: jwt refresh handler
      parameters:
      - description: jwt
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/middlewares.JWTRefreshForm'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      tags:
      - jwt
  /api/v1/jwt-token/:
    post:
      consumes:
      - application/json
      description: jwt login handler
      parameters:
      - description: auth info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/middlewares.JWTLoginForm'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      tags:
      - jwt
  /api/v1/obj/{bucketname}/{objpath}:
    get:
      consumes:
      - application/json
      description: 通过文件对象绝对路径,下载文件对象,可通过参数获取文件对象详细信息，或者自定义读取对象数据块
      parameters:
      - description: bucketname
        in: path
        name: bucketname
        required: true
        type: string
      - description: objpath
        in: path
        name: objpath
        required: true
        type: string
      - description: The byte offset of object to read
        in: query
        name: offset
        type: integer
      - description: Byte size to read
        in: query
        name: size
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UserListJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      tags:
      - object对象
    post:
      consumes:
      - multipart/form-data
      description: 上传对象分片
      parameters:
      - description: bucketname
        in: path
        name: bucketname
        required: true
        type: string
      - description: objpath
        in: path
        name: objpath
        required: true
        type: string
      - description: chunk
        in: formData
        name: chunk
        required: true
        type: file
      - description: chunk_offset
        in: formData
        name: chunk_offset
        required: true
        type: integer
      - description: chunk_size
        in: formData
        name: chunk_size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      tags:
      - object对象
  /api/v1/users/:
    get:
      consumes:
      - application/json
      description: 通过query参数“offset”和“limit”自定义获取用户列表信息
      parameters:
      - description: The initial index from which to return the results
        in: query
        name: offset
        required: true
        type: integer
      - description: Number of results to return per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UserListJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 获取用户列表页
      tags:
      - user 用户
    post:
      consumes:
      - application/json
      description: |-
        用户名必须是邮箱
        密码长度至少8位
      parameters:
      - description: 用户名
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/controllers.UserPostForm'
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 创建用户
      tags:
      - user 用户
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: 通过用户id删除一个用户
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 删除一个用户
      tags:
      - user 用户
    get:
      consumes:
      - application/json
      description: 通过用户id获取用户详细信息,需要超级用户权限,或id是当前认证用户id
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UserDetailJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 获取一个用户详细信息
      tags:
      - user 用户
    patch:
      consumes:
      - application/json
      description: |-
        1、超级职员用户拥有所有权限；
        2、用户拥有修改自己信息的权限；
        3、超级用户只有修改普通用户信息的权限
      parameters:
      - description: user id
        in: path
        name: id
        required: true
        type: integer
      - description: change info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/controllers.UserPatchForm'
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.UserDetailJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      security:
      - BasicAuth: []
      - ApiKeyAuth: []
      summary: 修改用户信息
      tags:
      - user 用户
  /user/register/:
    post:
      consumes:
      - application/json
      description: 注册用户
      parameters:
      - description: Some ID
        in: path
        name: some_id
        required: true
        type: string
      - description: The initial index from which to return the results
        in: query
        name: offset
        required: true
        type: integer
      - description: Number of results to return per page
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.BaseJSON'
            type: object
      tags:
      - Register 注册
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
