{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.",
        "title": "EVHarbor API",
        "termsOfService": "http://obs.casearth.cn/",
        "contact": {
            "name": "API Support",
            "url": "http://obs.casearth.cn/",
            "email": "helpdesk@cnic.cn"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:9000",
    "basePath": "/",
    "paths": {
        "/api/v1/buckets/": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过query参数“offset”和“limit”自定义获取存储桶列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket 存储桶"
                ],
                "summary": "获取存储桶列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The initial index from which to return the results",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BucketListJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "存储桶名称只能由字母、数字和“-”组成，且不能以“-”开头和结尾，长度3-64字符，符合DNS标准。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket 存储桶"
                ],
                "summary": "创建存储桶",
                "parameters": [
                    {
                        "description": "bucket name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BucketPostForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.bucketPostJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.bucketPost400JSON"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/buckets/{id}": {
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "#设置存储桶访问权限，提交query参数“public”, true(公有)，false(私有);\n#重命名存储桶，提交query参数“rename”,其值为新名称;\n#可以一次设置多个存储桶访问权限，其余存储桶id通过form ids传递, 重命名时ids无效。\n#同时提交“public”和“rename”参数,忽略“rename”参数",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket 存储桶"
                ],
                "summary": "设置存储桶访问权限或重命名存储桶",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bucket id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "设置对象公有或私有, true(公有)，false(私有)",
                        "name": "public",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "重命名桶,值为存储桶新名称",
                        "name": "rename",
                        "in": "query"
                    },
                    {
                        "description": "bucket id list,一次设置多个桶的权限时使用，命重名桶时无效",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.bucketDetailForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.bucketPatchJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/buckets/{id}/": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取存储桶详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket 存储桶"
                ],
                "summary": "获取存储桶详细信息",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bucket id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.bucketDetailJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "#可以一次删除多个存储桶，其余存储桶id通过form ids传递。",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bucket 存储桶"
                ],
                "summary": "删除存储桶",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "bucket id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "bucket id list",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.bucketDetailForm"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/dir/{bucketname}/{dirpath}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过query参数“offset”和“limit”自定义获取目录下子目录和对象列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dir 目录"
                ],
                "summary": "获取目录下子目录和对象列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dirpath",
                        "name": "dirpath",
                        "in": "path"
                    },
                    {
                        "type": "integer",
                        "description": "The initial index from which to return the results",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.DirListJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "创建一个目录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dir 目录"
                ],
                "summary": "创建目录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dirpath",
                        "name": "dirpath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.DirCreateJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.DirCreate400JSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除一个空目录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dir 目录"
                ],
                "summary": "删除空目录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "dirpath",
                        "name": "dirpath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/jwt-token-refresh/": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "jwt refresh",
                "consumes": [
                    "application/json",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwt"
                ],
                "summary": "刷新jwt",
                "parameters": [
                    {
                        "description": "jwt",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/middlewares.JWTRefreshForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/jwt-token/": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "jwt login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jwt"
                ],
                "summary": "认证获取jwt",
                "parameters": [
                    {
                        "description": "auth info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/middlewares.JWTLoginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/{bucketname}/{path}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过绝对路径获取目录或对象元数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metadata元数据"
                ],
                "summary": "获取目录或对象元数据",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "path",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.ObjMetadataJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/move/{bucketname}/{objpath}": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "移动或重命名一个对象\n参数move_to指定对象移动的目标路径（bucket桶下的目录路径），/或空字符串表示桶下根目录；参数rename指定重命名对象的新名称；\n请求时至少提交其中一个参数，亦可同时提交两个参数；只提交参数move_to只移动对象，只提交参数rename只重命名对象；",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "move移动或重命名"
                ],
                "summary": "对象移动或重命名",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "objpath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "path for move",
                        "name": "move_to",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "rename object",
                        "name": "rename",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.ObjMoveJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/obj/{bucketname}/{objpath}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过文件对象绝对路径,下载文件对象,可通过参数获取文件对象详细信息，或者自定义读取对象数据块\n* 注：\n1. offset \u0026\u0026 size(最大20MB，否则400错误) 参数校验失败时返回状态码400和对应参数错误信息，无误时，返回bytes数据流\n2. 不带参数时，返回整个文件对象；\n* Http Code: 状态码200：\nevhb_obj_size,文件对象总大小信息,通过标头headers传递：自定义读取时：返回指定大小的bytes数据流；\n其他,返回整个文件对象bytes数据流；",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "object对象"
                ],
                "summary": "分片下载对象",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "objpath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The byte offset of object to read",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Byte size to read",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过文件对象绝对路径分片上传文件对象\n## 说明：\n* 小文件可以作为一个分片上传，大文件请自行分片上传，分片过大可能上传失败，建议分片大小5-10MB；对象上传支持部分上传，\n分片上传数据直接写入对象，已成功上传的分片数据永久有效且不可撤销，请自行记录上传过程以实现断点续传；\n* 文件对象已存在时，数据上传会覆盖原数据，文件对象不存在，会自动创建文件对象，并且文件对象的大小只增不减；\n如果覆盖（已存在同名的对象）上传了一个新文件，新文件的大小小于原同名对象，上传完成后的对象大小仍然保持\n原对象大小（即对象大小只增不减），如果这不符合你的需求，参考以下2种方法：\n(1)先尝试删除对象（对象不存在返回404，成功删除返回204），再上传；\n(2)访问API时，提交reset参数，reset=true时，在保存分片数据前会先调整对象大小（如果对象已存在），未提供reset参\n数或参数为其他值，忽略之。\n## 特别提醒：\n切记在需要时只在上传第一个分片时提交reset参数，否者在上传其他分片提交此参数会调整对象大小，已上传的分片数据会丢失。\n\n## 注意：\n分片上传现不支持并发上传，并发上传可能造成脏数据，上传分片顺序没有要求，请一个分片上传成功后再上传另一个分片",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "object对象"
                ],
                "summary": "上传对象分片",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "objpath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "chunk",
                        "name": "chunk",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "chunk_offset",
                        "name": "chunk_offset",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "chunk_size",
                        "name": "chunk_size",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.objPostJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "删除一个对象",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "object对象"
                ],
                "summary": "删除对象",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "objpath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "对象共享或私有权限设置",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "object对象"
                ],
                "summary": "对象共享或私有权限设置",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "objpath",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "boolean",
                        "description": "是否分享，用于设置对象公有或私有, true(公开)，false(私有)",
                        "name": "share",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "对象公开分享天数(share=true时有效)，0表示永久公开，负数表示不公开，默认为0",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/users/": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过query参数“offset”和“limit”自定义获取用户列表信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user 用户"
                ],
                "summary": "获取用户列表页",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The initial index from which to return the results",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.UserListJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "用户名必须是邮箱\n密码长度至少8位",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user 用户"
                ],
                "summary": "创建用户",
                "parameters": [
                    {
                        "description": "用户名",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.UserPostForm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过用户id获取用户详细信息,需要超级用户权限,或id是当前认证用户id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user 用户"
                ],
                "summary": "获取一个用户详细信息",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.UserDetailJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "通过用户id删除一个用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user 用户"
                ],
                "summary": "删除一个用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "1、超级职员用户拥有所有权限；\n2、用户拥有修改自己信息的权限；\n3、超级用户只有修改普通用户信息的权限",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user 用户"
                ],
                "summary": "修改用户信息",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "change info",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.UserPatchForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.UserDetailJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/obs/{bucketname}/{objpath}": {
            "get": {
                "security": [
                    {
                        "BasicAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "浏览器端下载文件对象，公共文件对象或当前用户(如果用户登录了)文件对象下载，没有权限下载非公共文件对象或不属于当前用户文件对象\n* 支持断点续传，通过HTTP头 Range和Content-Range\n* 跨域访问和安全\n跨域又需要传递token进行权限认证，我们推荐token通过header传递，不推荐在url中传递token,处理不当会增加token泄露等安全问题的风险。\n我们支持token通过url参数传递，auth-token和jwt token两种token对应参数名称分别为token和jwt。出于安全考虑，请不要直接把token明文写到前端\u003ca\u003e标签href属性中，以防token泄密。请动态拼接token到url，比如如下方式：\n$(\"xxx\").on('click', function(e){\ne.preventDefault();\nlet token = 从SessionStorage、LocalStorage、内存等等存放token的安全地方获取\nlet url = $(this).attr('href') + '?token=' + token; // auth-token\nlet url = $(this).attr('href') + '?jwt=' + token;   // jwt token\nwindow.location.href = url;\n}",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "对象下载"
                ],
                "summary": "公共或私有对象下载",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bucketname",
                        "name": "bucketname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "objpath",
                        "name": "objpath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "206": {
                        "description": "Partial Content",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "416": {
                        "description": "Requested Range Not Satisfiable",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        },
        "/user/register/": {
            "post": {
                "description": "注册用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register 注册"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Some ID",
                        "name": "some_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The initial index from which to return the results",
                        "name": "offset",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of results to return per page",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/controllers.BaseJSON"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.BaseJSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                }
            }
        },
        "controllers.BucketListJSON": {
            "type": "object",
            "properties": {
                "buckets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Bucket"
                    }
                },
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "page": {
                    "type": "object",
                    "$ref": "#/definitions/controllers.PageNumberInfo"
                },
                "previous": {
                    "type": "string"
                }
            }
        },
        "controllers.BucketPostForm": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controllers.DirCreate400JSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "existing": {
                    "type": "boolean"
                }
            }
        },
        "controllers.DirCreateJSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/controllers.dirCreateData"
                },
                "dir": {
                    "type": "object",
                    "$ref": "#/definitions/models.HarborObject"
                }
            }
        },
        "controllers.DirListJSON": {
            "type": "object",
            "properties": {
                "bucket_name": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "dir_path": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HarborObject"
                    }
                },
                "next": {
                    "type": "string"
                },
                "page": {
                    "type": "object",
                    "$ref": "#/definitions/controllers.PageNumberInfo"
                },
                "previous": {
                    "type": "string"
                }
            }
        },
        "controllers.ObjMetadataJSON": {
            "type": "object",
            "properties": {
                "bucket_name": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "dir_path": {
                    "type": "string"
                },
                "obj": {
                    "type": "object",
                    "$ref": "#/definitions/models.HarborObject"
                }
            }
        },
        "controllers.ObjMoveJSON": {
            "type": "object",
            "properties": {
                "bucket_name": {
                    "type": "string"
                },
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "dir_path": {
                    "type": "string"
                },
                "obj": {
                    "type": "object",
                    "$ref": "#/definitions/models.HarborObject"
                }
            }
        },
        "controllers.PageNumberInfo": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "integer"
                },
                "final": {
                    "type": "integer"
                }
            }
        },
        "controllers.UserDetailJSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "$ref": "#/definitions/models.UserProfile"
                }
            }
        },
        "controllers.UserListJSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "privous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserProfile"
                    }
                }
            }
        },
        "controllers.UserPatchForm": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                }
            }
        },
        "controllers.UserPostForm": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "company": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.bucketDetailForm": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.bucketDetailJSON": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "object",
                    "$ref": "#/definitions/models.Bucket"
                },
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                }
            }
        },
        "controllers.bucketPatchJSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "public": {
                    "type": "boolean"
                },
                "rename": {
                    "type": "string"
                }
            }
        },
        "controllers.bucketPost400JSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/controllers.BucketPostForm"
                },
                "existing": {
                    "type": "boolean"
                }
            }
        },
        "controllers.bucketPostJSON": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "object",
                    "$ref": "#/definitions/models.Bucket"
                },
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/controllers.BucketPostForm"
                }
            }
        },
        "controllers.dirCreateData": {
            "type": "object",
            "properties": {
                "bucket_name": {
                    "type": "string"
                },
                "dir_name": {
                    "type": "string"
                },
                "dir_path": {
                    "type": "string"
                }
            }
        },
        "controllers.objPostJSON": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "code_text": {
                    "type": "string"
                },
                "created": {
                    "type": "boolean"
                }
            }
        },
        "middlewares.JWTLoginForm": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "middlewares.JWTRefreshForm": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.Bucket": {
            "type": "object",
            "properties": {
                "access_permission": {
                    "description": "访问权限",
                    "type": "integer"
                },
                "created_time": {
                    "type": "object",
                    "$ref": "#/definitions/models.TypeJSONTime"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "description": "所属用户id",
                    "type": "integer"
                }
            }
        },
        "models.HarborObject": {
            "type": "object",
            "properties": {
                "access_permission": {
                    "type": "string"
                },
                "dlc": {
                    "description": "该文件的下载次数，目录时dlc为0",
                    "type": "integer"
                },
                "download_url": {
                    "type": "string"
                },
                "fod": {
                    "description": "True==文件，False==目录",
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "na": {
                    "description": "全路径文件名或目录名",
                    "type": "string"
                },
                "name": {
                    "description": "文件名或目录名",
                    "type": "string"
                },
                "si": {
                    "description": "文件大小, 字节数",
                    "type": "integer"
                },
                "ult": {
                    "description": "文件的上传时间，或目录的创建时间",
                    "type": "object",
                    "$ref": "#/definitions/models.TypeJSONTime"
                },
                "upt": {
                    "description": "修改时间",
                    "type": "object",
                    "$ref": "#/definitions/models.TypeJSONTime"
                }
            }
        },
        "models.TypeJSONTime": {
            "type": "object"
        },
        "models.UserProfile": {
            "type": "object",
            "properties": {
                "company": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "last_name": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}